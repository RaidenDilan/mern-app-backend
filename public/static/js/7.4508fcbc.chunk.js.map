{"version":3,"sources":["shared/components/UIElements/Card/Card.js","shared/components/UIElements/Map/Map.js","places/components/PlaceItem/PlaceItem.js","places/components/PlaceList/PlaceList.js","places/pages/UserPlaces/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","Placeitem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeModalHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","res","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.4508fcbc.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div\n      className={ `card ${ props.className }` }\n      style={ props.style }>\n      { props.children }\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n\n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={ mapRef }\n      className={ `map ${ props.className }` }\n      style={ props.style }>\n    </div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card/Card';\nimport Modal from '../../../shared/components/UIElements/Modal/Modal';\nimport Button from '../../../shared/components/FormElements/Button/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\nimport Map from '../../../shared/components/UIElements/Map/Map';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst Placeitem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openModalHandler = () => setShowMap(true);\n  const closeModalHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${ process.env.REACT_APP_BACKEND_URL }/places/${ props.id }`,\n        'DELETE',\n        null,\n        { Authorization: 'Bearer ' + auth.token }\n      );\n      props.onDelete(props.id);\n    } catch (err) {/* err is handled in our custom http hook */}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal\n        error={ error }\n        onClear={ clearError } />\n      <Modal\n        show={ showMap }\n        onCancel={ closeModalHandler }\n        header={ props.address }\n        contentClass='place-item__modal-content'\n        footerClass='place-item__modal-actions'\n        footer={ <Button onClick={ closeModalHandler }>Close</Button> }>\n        <div className='map-container'>\n          <Map\n            center={ props.coordinates }\n            zoom={ 16 } />\n        </div>\n      </Modal>\n      <Modal\n        show={ showConfirmModal }\n        onCancel={ cancelDeleteHandler }\n        header='Are you sure?'\n        footerClass='place-item__modal-actions'\n        footer={ (\n          <React.Fragment>\n            <Button\n              inverse\n              onClick={ cancelDeleteHandler }>CANCEL</Button>\n            <Button\n              danger\n              onClick={ confirmDeleteHandler }>DELETE</Button>\n          </React.Fragment>\n        ) }>\n        <p>Do want to proceed and delete this place? Please note that it can't be undone thereafter.</p>\n      </Modal>\n      <li className='place-item'>\n        <Card className='place-item__content'>\n          { isLoading && <LoadingSpinner asOverlay /> }\n          <div className='place-item__image'>\n            <img\n              src={ `${ process.env.REACT_APP_ASSET_URL }/${ props.image }` }\n              alt={ props.title } />\n          </div>\n          <div className='place-item__info'>\n            <h2>{ props.title }</h2>\n            <h3>{ props.address }</h3>\n            <p>{ props.description }</p>\n          </div>\n          <div className='place-item__actions'>\n            <Button\n              inverse\n              onClick={ openModalHandler }>\n              VIEW ON MAP\n            </Button>\n            { auth.userId === props.creatorId && <Button to={ `/places/${ props.id }` }>EDIT</Button> }\n            { auth.userId === props.creatorId && (\n              <Button\n                danger\n                onClick={ showDeleteWarningHandler }>\n                DELETE\n              </Button>\n            ) }\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default Placeitem;\n","import React from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card/Card';\nimport PlaceItem from '../PlaceItem/PlaceItem';\nimport Button from '../../../shared/components/FormElements/Button/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className='place-list center'>\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to='/places/new'>Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className='place-list'>\n      { props.items.map(place => (\n        <PlaceItem\n          key={ place.id }\n          id={ place.id }\n          image={ place.image }\n          title={ place.title }\n          description={ place.description }\n          address={ place.address }\n          creatorId={ place.creator }\n          coordinates={ place.location }\n          onDelete={ props.onDeletePlace } />)) }\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../../components/PlaceList/PlaceList.js';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const res = await sendRequest(`${ process.env.REACT_APP_BACKEND_URL }/places/user/${ userId }`);\n        setLoadedPlaces(res.places);\n      } catch (err) {/* err is handled in our custom http hook */}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId));\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal\n        error={ error }\n        onClear={ clearError } />\n      { isLoading && (\n        <div className='center'>\n          <LoadingSpinner asOverlay />\n        </div>\n      ) }\n      { !isLoading && loadedPlaces && <PlaceList\n        items={ loadedPlaces }\n        onDeletePlace={ placeDeletedHandler } /> }\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}